#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 768e56f5-3e3b-456b-b9ff-0a969131024d
# Source File: ..\..\..\Users\bpeppin\OneDrive - VMware, Inc\Admin_Scripts\SAPIEN\PowerShell Studio\Projects\Install-Updates\WindowsUpdaterTool.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
VgIAAB+LCAAAAAAABACFUstOwzAQvFfqP0Q+IqVJ+ghUpD6gKqgHHmoKHJGTbIjBsSPb6YOvx4lT
1AoQl7XH3p3RjB2tIRNbkIcl0QQPB44TPUrxDpl2kgPPSik4/YR8gWLCFKDuMKZMg1ygi1Gtguu2
VnbJ7RLsK9Ztiq4qU+1JCawe6b1GnZCRegapqOB4PAoi7wj6O6MCqyW+DK9gFhYzdwKT1J3OwtRN
50Xh+mQezoNJ4I+neeT1zf1o72BzqAH7kXcKj+SC5UbO8U7VVA966Nw0lBnnPsKJJlI3dWvGav3V
6SQlkW1cG9mYtNZQgASeQdzwTBtzC7TiW/EB7i0TKWGvJiyE7V61yf3D/gtfUoqde0coj4WsDF+B
8BG1L3BGaIG1+R2LRQ+SvlFOWNtwTyrAL5TnYqee6pyYx94IwQxdbUYi70fvcBB5Z//oC3qU+BtW
AgAA#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2019 v5.6.162
     Generated on:       8/13/2020 11:16 AM
     Generated by:       bpeppin
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2019
#>



#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
YQAAAB+LCAAAAAAABACzCUpNzi9LLap0SSxJVAAyijPz82yVjPUMlex4uRQUbPyLMtMz8xJz3DJz
Uv0Sc1PtgksSi0pKC/QKiott9DFkebls9JGNtAMAoyFkEGEAAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}


#endregion Source: Startup.pss

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	function Write-Status
	{
		
		[CmdletBinding()]
		param
		(
			[parameter(Mandatory = $true)]
			[ValidateNotNullOrEmpty()]
			[string]$Message
		)
		$statusbar1.Text = $Message
	}
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	
#endregion Source: Globals.ps1

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formWindowsUpdaterToolFo = New-Object 'System.Windows.Forms.Form'
	$labelCredits = New-Object 'System.Windows.Forms.Label'
	$linklabelForMoreInfoClickHere = New-Object 'System.Windows.Forms.LinkLabel'
	$label2 = New-Object 'System.Windows.Forms.Label'
	$label1 = New-Object 'System.Windows.Forms.Label'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$labelSelectWindows10Versi = New-Object 'System.Windows.Forms.Label'
	$OSVersion = New-Object 'System.Windows.Forms.ComboBox'
	$buttonGetUpdates = New-Object 'System.Windows.Forms.Button'
	$Download = New-Object 'System.Windows.Forms.Button'
	$statusbar1 = New-Object 'System.Windows.Forms.StatusBar'
	$datagridview1 = New-Object 'System.Windows.Forms.DataGridView'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$groupbox3 = New-Object 'System.Windows.Forms.GroupBox'
	$labelAppOptions = New-Object 'System.Windows.Forms.Label'
	$radiobuttonUserDeferredRestart = New-Object 'System.Windows.Forms.RadioButton'
	$checkboxDependency = New-Object 'System.Windows.Forms.CheckBox'
	$radiobuttonForceRestart = New-Object 'System.Windows.Forms.RadioButton'
	$radiobuttonDoNotRestart = New-Object 'System.Windows.Forms.RadioButton'
	$labelWorkspaceONEInfo = New-Object 'System.Windows.Forms.Label'
	$buttonSaveToWS1 = New-Object 'System.Windows.Forms.Button'
	$textboxGroupID = New-Object 'System.Windows.Forms.TextBox'
	$labelGroupID = New-Object 'System.Windows.Forms.Label'
	$Connect = New-Object 'System.Windows.Forms.Button'
	$textboxServer = New-Object 'System.Windows.Forms.TextBox'
	$labelServer = New-Object 'System.Windows.Forms.Label'
	$textboxAPI = New-Object 'System.Windows.Forms.TextBox'
	$labelAPIKey = New-Object 'System.Windows.Forms.Label'
	$textboxUsername = New-Object 'System.Windows.Forms.TextBox'
	$labelUsername = New-Object 'System.Windows.Forms.Label'
	$textboxPassword = New-Object 'System.Windows.Forms.TextBox'
	$labelPassword = New-Object 'System.Windows.Forms.Label'
	$tooltipConnect = New-Object 'System.Windows.Forms.ToolTip'
	$tooltipDependencyApp = New-Object 'System.Windows.Forms.ToolTip'
	$tooltipForceRestart = New-Object 'System.Windows.Forms.ToolTip'
	$tooltipDoNotRestart = New-Object 'System.Windows.Forms.ToolTip'
	$tooltipUserDeferredRestart = New-Object 'System.Windows.Forms.ToolTip'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	$CheckKB_URL = "https://raw.githubusercontent.com/brookspeppin/WorkspaceONE/master/Windows%20Updater%20Tool%20For%20Workspace%20ONE/Supporting%20Scripts/Check-KB.ps1"
	$InstallUpdate_URL = "https://raw.githubusercontent.com/brookspeppin/WorkspaceONE/master/Windows%20Updater%20Tool%20For%20Workspace%20ONE/Supporting%20Scripts/Install-Update.ps1"
	$Catalog_URL = "https://raw.githubusercontent.com/OSDeploy/OSDSUS/master/Catalogs/Windows%2010%201903.xml"
	$Catalog_URL_1809 = "https://raw.githubusercontent.com/OSDeploy/OSDSUS/master/Catalogs/Windows%2010.xml"
	$tooltipConnect.SetToolTip($Connect, "Click to verify your crendentials can connect to Workspace ONE.")
	$tooltipDependencyApp.SetToolTip($checkboxDependency, "Use this if you'd like to sequence certain installs together.`n"`
		+ "i.e. Installing servicing stack update before the cumulative update.")
	$tooltipForceRestart.SetToolTip($radiobuttonForceRestart, "After the update installs, it will force a reboot and give a 5 min timer to the end user.")
	$tooltipDoNotRestart.SetToolTip($radiobuttonDoNotRestart, "After the update installs, no reboot will be forced.")
	$tooltipUserDeferredRestart.SetToolTip($radiobuttonUserDeferredRestart, "This will prompt the user with a toast notification that a restart is required.
They can 'Restart Now' or defer. You can set the amount of days anywhere between 0-7 before the system will force the reboot.
Don't set it to 0 as this acts the same as the 'Force Reboot' option and is not a great user experience.")
	$label1.Text = "Welcome! How to Start:`n1. Select your Windows 10 version from the dropdown.
2. Click Get Updates. Select the update you need.
3. Click Download. 
4. Enter WS1 REST API credentials and click Validate Creds.
5. Configure App Settings and when ready, click Save to WS1."
	$label2.Text = "by Brooks Peppin | Version 1.0"
	
	
	
	$formWindowsUpdaterToolFo_Load={
		#TODO: Initialize Form Controls here
		$buttonGetUpdates.Enabled = $false
		$Download.Enabled = $false
		$buttonSaveToWS1.Enabled = $false
		$textboxServer.Text = "https://asXXXX.awmdm.com"
	
		Write-Status "Select and Windows 10 version and click 'Get Updates' to begin"
	}
	
	
	$exitToolStripMenuItem_Click={
		#TODO: Place custom script here
		$formWindowsUpdaterToolFo.Close()
	}
	
	$aboutToolStripMenuItem_Click={
		#TODO: Place custom script here
		[System.Windows.Forms.MessageBox]::Show("Menu Application v1.0","Menu Application");
	}
	
	
	
	#region Control Helper Functions
	function Update-DataGridView
	{
		<#
		.SYNOPSIS
			This functions helps you load items into a DataGridView.
	
		.DESCRIPTION
			Use this function to dynamically load items into the DataGridView control.
	
		.PARAMETER  DataGridView
			The DataGridView control you want to add items to.
	
		.PARAMETER  Item
			The object or objects you wish to load into the DataGridView's items collection.
		
		.PARAMETER  DataMember
			Sets the name of the list or table in the data source for which the DataGridView is displaying data.
	
		.PARAMETER AutoSizeColumns
		    Resizes DataGridView control's columns after loading the items.
		#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Item,
		    [Parameter(Mandatory=$false)]
			[string]$DataMember,
			[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
		)
		$DataGridView.SuspendLayout()
		$DataGridView.DataMember = $DataMember
		
		if ($null -eq $Item)
		{
			$DataGridView.DataSource = $null
		}
		elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
		{
			$DataGridView.DataSource = $Item.Tables[0]
		}
		elseif ($Item -is [System.ComponentModel.IListSource]`
		-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
		{
			$DataGridView.DataSource = $Item
		}
		else
		{
			$array = New-Object System.Collections.ArrayList
			
			if ($Item -is [System.Collections.IList])
			{
				$array.AddRange($Item)
			}
			else
			{
				$array.Add($Item)
			}
			$DataGridView.DataSource = $array
		}
		
		if ($AutoSizeColumns -ne 'None')
		{
			$DataGridView.AutoResizeColumns($AutoSizeColumns)
		}
		
		$DataGridView.ResumeLayout()
	}
	
	function ConvertTo-DataTable
	{
		<#
			.SYNOPSIS
				Converts objects into a DataTable.
		
			.DESCRIPTION
				Converts objects into a DataTable, which are used for DataBinding.
		
			.PARAMETER  InputObject
				The input to convert into a DataTable.
		
			.PARAMETER  Table
				The DataTable you wish to load the input into.
		
			.PARAMETER RetainColumns
				This switch tells the function to keep the DataTable's existing columns.
			
			.PARAMETER FilterWMIProperties
				This switch removes WMI properties that start with an underline.
		
			.EXAMPLE
				$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
		#>
		[OutputType([System.Data.DataTable])]
		param(
		$InputObject, 
		[ValidateNotNull()]
		[System.Data.DataTable]$Table,
		[switch]$RetainColumns,
		[switch]$FilterWMIProperties)
		
		if($null -eq $Table)
		{
			$Table = New-Object System.Data.DataTable
		}
		
		if ($null -eq $InputObject)
		{
			$Table.Clear()
			return @( ,$Table)
		}
		
		if ($InputObject -is [System.Data.DataTable])
		{
			$Table = $InputObject
		}
		elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
		{
			$Table = $InputObject.Tables[0]
		}
		else
		{
			if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
			{
				#Clear out the Table Contents
				$Table.Clear()
				
				if ($null -eq $InputObject) { return } #Empty Data
				
				$object = $null
				#find the first non null value
				foreach ($item in $InputObject)
				{
					if ($null -ne $item)
					{
						$object = $item
						break
					}
				}
				
				if ($null -eq $object) { return } #All null then empty
				
				#Get all the properties in order to create the columns
				foreach ($prop in $object.PSObject.Get_Properties())
				{
					if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
					{
						#Get the type from the Definition string
						$type = $null
						
						if ($null -ne $prop.Value)
						{
							try { $type = $prop.Value.GetType() }
							catch { Out-Null }
						}
						
						if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
						{
							[void]$table.Columns.Add($prop.Name, $type)
						}
						else #Type info not found
						{
							[void]$table.Columns.Add($prop.Name)
						}
					}
				}
				
				if ($object -is [System.Data.DataRow])
				{
					foreach ($item in $InputObject)
					{
						$Table.Rows.Add($item)
					}
					return @( ,$Table)
				}
			}
			else
			{
				$Table.Rows.Clear()
			}
			
			foreach ($item in $InputObject)
			{
				$row = $table.NewRow()
				
				if ($item)
				{
					foreach ($prop in $item.PSObject.Get_Properties())
					{
						if ($table.Columns.Contains($prop.Name))
						{
							$row.Item($prop.Name) = $prop.Value
						}
					}
				}
				[void]$table.Rows.Add($row)
			}
		}
		
		return @(,$Table)
	}
	
	function Update-ComboBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
		
		.PARAMETER ComboBox
			The ComboBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ComboBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
			
		.PARAMETER ValueMember
			Indicates the property to use for the value of the control.
		
		.PARAMETER Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red" -Append
			Update-ComboBox $combobox1 "White" -Append
			Update-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Update-ComboBox $combobox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ComboBox]
			$ComboBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[Parameter(Mandatory = $false)]
			[string]$ValueMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$ComboBox.Items.Clear()
		}
		
		if ($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ComboBox.Items.Add($obj)
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)
		}
		
		$ComboBox.DisplayMember = $DisplayMember
		$ComboBox.ValueMember = $ValueMember
	}
	#endregion
	
	
	
	$buttonGetUpdates_Click = {
		
		#TODO: Place custom script here
		# https://github.com/OSDeploy/OSDSUS/tree/master/Catalogs
		If ($global:OSVersion -eq "1809")
		{
			
			Invoke-WebRequest -Uri $Catalog_URL_1809 -OutFile $env:temp\catalog.xml
		}
		else
		{
			Invoke-WebRequest -Uri $Catalog_URL -OutFile $env:temp\catalog.xml
		}
	
		$xml = Import-Clixml $env:temp\catalog.xml
		$UpdateList = $xml | Where-Object { ($_.UpdateBuild -like $global:OSVersion) -and ($_.UpdateArch -Like "x64") } | select KBNumber, Title, AdditionalInformationUrls, OriginUri, FileName | Sort-Object Title
		Update-DataGridView -DataGridView $datagridview1 -Item $UpdateList -AutoSizeColumns AllCells
		$Download.Enabled = $true
	}
	
	$datagrid1_Navigate=[System.Windows.Forms.NavigateEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.NavigateEventArgs]
		#TODO: Place custom script here
		
	}
	
	$datagridview1_CellContentClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
		#TODO: Place custom script here
	<#	$datagridview1.SelectedRows |
		ForEach-Object{
			Write-Host $_.Cells[2].Value
		}#>
	}
	
	$OSVersion_SelectedIndexChanged={
		#TODO: Place custom script here
		
		
		
		
		switch ($OSVersion.Text) {
			"2004 x64" {
				$global:OSVersion = "2004"
			}
			"1909 x64" {
				$global:OSVersion = "1909"
			}
			"1903 x64" {
				$global:OSVersion = "1903"
			}
			"1809 x64" {
				$global:OSVersion = "1809"
			}
			default {
				#<code>
			}
		}
	
		$buttonGetUpdates.Enabled = $true
	
	}
	
	$Download_Click= {
		#TODO: Place custom script here
		$row = $datagridview1.SelectedRows
		
		
		$datagridview1.SelectedRows |
		ForEach-Object{
			$AdditionalInformationUrls = $_.Cells['AdditionalInformationUrls'].Value.trim('{}')
			$KB = $_.Cells['KBNumber'].Value
			$title = $_.Cells['Title'].Value
			$url = $_.Cells['OriginURI'].Value
			$filename = $_.Cells['Filename'].Value
		}
		Write-Status "Downloading $title"
		$rootpath = "$env:TEMP\$title"
		If (!(Test-Path $rootpath))
		{
			mkdir $rootpath
		}
		Invoke-WebRequest -Uri $url -OutFile "$rootpath\$filename"
		If (Test-Path "$rootpath\$filename")
		{
			Write-Status "Successfully downloaded."
		}
		else
		{
			Write-Status "Error downloading. Try again."
		}
		
		Invoke-WebRequest -Uri $CheckKB_URL -OutFile "$env:temp\Check-KB.ps1"
		$DetectionScriptPath = "$env:temp\Check-KB.ps1"
		Invoke-WebRequest -Uri $InstallUpdate_URL -OutFile "$rootpath\Install-Update.ps1"
		
		New-Item -Path $rootpath -Name "Empty.msi" -Force
	
		$filename = $filename -replace ".cab", ".zip"
		$filepath = "$env:temp\$filename"
		Write-Status "Zipping up files to $filepath"
	
		Start-Job { Compress-Archive -Path $env:temp\$using:title\* -DestinationPath $using:filepath -Force } | Receive-Job -Wait -AutoRemoveJob
		if (Test-Path $filepath)
		{
			Write-Status "Zipping done. Click 'Validate Credentials' and then 'Save to WS1' to save the app to Workspace ONE."
		}
		
	
		$script:appDetails = New-Object PSObject
		$appDetails | Add-Member -MemberType NoteProperty -Name "Title" -Value $title -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "KB" -Value $KB -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "URL" -Value $url -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "AdditionalInformationURLs" -Value $AdditionalInformationUrls -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "Filename" -Value $filename -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "Filepath" -Value $filepath -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "DetectionScriptPath" -Value $DetectionScriptPath -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "RootPath" -Value $rootpath -Force
	
	
	}
	
	function Migrate-AppsToAirWatch
	{
		
		Param (
			[Parameter(Mandatory = $True)]
			$headers,$OGID
			
		)
		
		$AWServer = $textboxServer.Text
		
		Write-Status "Uploading main files as a zip..."
		#	Start-Job { Compress-Archive -Path $env:temp\$using:title\* -DestinationPath $using:filepath -Force } | Receive-Job -Wait -AutoRemoveJob
		try
		{
			$filePath = $appDetails.filepath
			$filename = $appDetails.filename
			[string]$url = "$AWServer/api/mam/blobs/uploadblob?filename=$filename&organizationgroupid=$OGID"
			
			$blobUploadResponse = Start-Job { Invoke-RestMethod -Method Post -Uri $using:url -Headers $using:headers -InFile $using:filePath } | Wait-Job | Receive-Job
			#Receive-Job -job $blobUploadResponse -Wait -AutoRemoveJob
			Write-Host $blobUploadResponse
			
	<#		[string]$url = "$airwatchServer/api/mam/blobs/uploadblob?filename=$filename&organizationgroupid=$groupID"
			Write-Host $url
			
			Write-Verbose "File Path $filePath"
			
			$response = Invoke-RestMethod -Method Post -Uri $url -Headers $headers -InFile $filePath
			$blobUploadResponse = Upload-Blob -airwatchServer $AWServer `
											  -filename $appDetails.filename `
											  -filepath $appDetails.filepath `
											  -groupID $OGID `
											  -headers $headers#>
		}
		catch
		{
			Write-Status $blobUploadResponse
		}
		
		Write-Status "Uploading detection script..."
		try
		{
			$filePath = $appDetails.DetectionScriptPath
			$filename = "Check-kb.ps1"
			[string]$url = "$AWServer/api/mam/blobs/uploadblob?filename=$filename&organizationgroupid=$OGID"
			$blobDetectionScript = Start-Job { Invoke-RestMethod -Method Post -Uri $using:url -Headers $using:headers -InFile $using:filePath } | Wait-Job | Receive-Job
	<#		$blobDetectionScript = Upload-Blob -airwatchServer $AWServer `
											   -filename "Check-KB.ps1" `
											   -filepath "C:\Temp\Check-KB.ps1" `
											   -groupID $OGID `
											   -headers $headers#>
		}
		catch
		{
			$blobDetectionScript
		}
	
		#-filepath $appdetails.DetectionScriptPath `
	
		# Extract Blob ID and store in the properties table.
		$blobID = [string]$blobUploadResponse.Value
		$blobID2 = [string]$blobDetectionScript.Value
		$appDetails | Add-Member -MemberType NoteProperty -Name "BlobID" -Value $blobID -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "BlobID2" -Value $blobID2 -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "GroupID" -Value $OGID -Force
		if ($radiobuttonDoNotRestart.Checked -eq $true)
		{
			$DeviceRestart = "DoNotRestart"
			$InstallerRebootCode = "3010"
		}
		if ($radiobuttonForceRestart.Checked -eq $true)
		{
			$DeviceRestart = "ForceRestart"
			$InstallerRebootCode = "3010"
		}
		if ($radiobuttonUserDeferredRestart.Checked -eq $true)
		{
			$DeviceRestart = "RestartIfNeeded"
			$InstallerRebootCode = "3010"
		}
		$appDetails | Add-Member -MemberType NoteProperty -Name "DeviceRestart" -Value $DeviceRestart -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "InstallerRebootCode" -Value $InstallerRebootCode -Force
		if ($checkboxDependency.Checked -eq $true)
		{
			$dependency = 'true'
		}
		else
		{
			$dependency = 'false'
		}
		$appDetails | Add-Member -MemberType NoteProperty -Name "Dependency" -Value $dependency -Force
	
		#$app.BlobId = $blobID
		
		# Map App details to Json
		Write-Status "Converting app details to JSON..."
		$awJson = Map-AppDetailsJson -appdetails $appDetails
		#Invoke-RestMethod -Method Post -Uri $url -Headers $headers -Body $awjson
		#$files = Split-File -Path $path -PartSizeBytes 8MB
		#$appsize = [IO.File]::OpenRead($path).Length
		#$appsize.Close()
		#Upload-Chunk -Files $files -Appsize $appsize
		#Write-Host $awJson
		#return
		# Save App
		$awJson | Out-File c:\Temp\$($appDetails.kb).txt
		#return
		if ($appDetails.BlobId -ne $null)
		{
			Write-Status "Saving app to Workspace ONE Console"
			# Save App/Finish Upload in AirWatch
			$webReturn = Save-App -awServer $AWServer `
								  -headers $headers `
								  -appDetails $awJson
			
	
		}
		else
		{
			Write-Status -Message "Blob ID not in hashtable, unable to finish upload of  $($app.ApplicationName)"
		}
		
	
		
	}
	function Upload-Chunk
	{
		param
		(
			[Parameter(Mandatory)]
			$files,
			$Appsize
			
		)
		$count = 1
		$transactionID = ""
		foreach ($file in $files)
		{
			$ChunkData = [System.IO.File]::ReadAllBytes($file)
			$Chunksize = $ChunkData.Length
			$ChunkSequenceNumber = $count
			$url = "$awServer/api/mam/apps/internal/uploadchunk"
			$chunk = @{
				ChunkData = $ChunkData
				ChunkSequenceNumber = $ChunkSequenceNumber
				TotalApplicationSize = $Appsize
				ChunkSize = $Chunksize
				TransactionID = $transactionID
			}
			$json = $chunk | ConvertTo-Json -Depth 10
			Write-Host "Uploading Chunk $count"
			$response = Invoke-RestMethod -Method Post -Uri $url -Headers $headers -Body $json
			Write-Host $response
			
			$transactionID = $response.TranscationId
			Write-Host "Transaction ID: $transactionID"
			$count++
			#$chunkdata.close()
		}
		
	
	}
	
	function Split-File
	{
		
		param
		(
			[Parameter(Mandatory)]
			[String]$Path,
			[Int32]$PartSizeBytes = 1MB
		)
		
		try
		{
			# get the path parts to construct the individual part
			# file names:
			$fullBaseName = [IO.Path]::GetFileName($Path)
			$baseName = [IO.Path]::GetFileNameWithoutExtension($Path)
			$parentFolder = [IO.Path]::GetDirectoryName($Path)
			$extension = [IO.Path]::GetExtension($Path)
			
			# get the original file size and calculate the
			# number of required parts:
			$originalFile = New-Object System.IO.FileInfo($Path)
			$totalChunks = [int]($originalFile.Length / $PartSizeBytes) + 1
			$digitCount = [int][Math]::Log10($totalChunks) + 1
			
			# read the original file and split into chunks:
			$reader = [IO.File]::OpenRead($Path)
			$count = 0
			$buffer = New-Object Byte[] $PartSizeBytes
			$moreData = $true
			$files = @()
			# read chunks until there is no more data
			while ($moreData)
			{
				# read a chunk
				$bytesRead = $reader.Read($buffer, 0, $buffer.Length)
				# create the filename for the chunk file
				$chunkFileName = "$parentFolder\$fullBaseName.{0:D$digitCount}.part" -f $count
				Write-Host "saving to $chunkFileName..."
				$files += "$chunkFileName"
				$output = $buffer
				
				# did we read less than the expected bytes?
				if ($bytesRead -ne $buffer.Length)
				{
					# yes, so there is no more data
					$moreData = $false
					# shrink the output array to the number of bytes
					# actually read:
					$output = New-Object Byte[] $bytesRead
					[Array]::Copy($buffer, $output, $bytesRead)
				}
				# save the read bytes in a new part file
				[IO.File]::WriteAllBytes($chunkFileName, $output)
				# increment the part counter
				++$count
			}
			Write-Host $count
			# done, close reader
			$reader.Close()
		}
		catch
		{
			throw "Unable to split file ${Path}: $_"
		}
		Return $files
	}
	
	Function Save-App
	{
		Param (
			[Parameter(Mandatory = $True)]
			[String]$awServer,
			[Parameter(Mandatory = $True)]
			[hashtable]$headers,
			[Parameter(Mandatory = $True)]
			$appDetails
		)
		
		$url = "$awServer/api/v1/mam/apps/internal/begininstall"
		#$appid = "8324"
		#$myapp = Invoke-RestMethod -Method Get -Uri "$awServer/api/v1/mam/apps/internal/8663" -Headers $headers
		
		try
		{
			$response = Invoke-RestMethod -Method Post -Uri $url.ToString() -Headers $headers -Body $appDetails
			
	
	
		}
		catch
		{
			Write-Status -Message "Save app failed :: $response"
			[System.Windows.Forms.MessageBox]::Show("App Name: $response", "Failure", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Error)
			
		}
	
	
		If ($response.ApplicationName)
		{
			Write-Status "Success! App Name: $($response.ApplicationName)"
			if ($checkboxDependency.Checked -eq $true)
			{
				[System.Windows.Forms.MessageBox]::Show("App Name: $($response.ApplicationName)`n`nNOTE: This is a dependency app.You can view it by going to Apps & Books then adding a filter for Windows Desktop. Then change from Core Apps to Dependency Apps. Don't forget to it to your main app. ", "Success", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Information)
				
			}
			else
			{
				$dependency = 'false'
			}
			[System.Windows.Forms.MessageBox]::Show("App Name: $($response.ApplicationName)", "Success", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Information)
			
			
		}
		
		
		Return $response
	}
	
	Function Upload-Blob
	{
		Param (
			[Parameter(Mandatory = $True)]
			[String]$airwatchServer,
			[Parameter(Mandatory = $True)]
			[String]$filename,
			[Parameter(Mandatory = $True)]
			[String]$filePath,
			[Parameter(Mandatory = $True)]
			[String]$groupID,
			[Parameter(Mandatory = $True)]
			[hashtable]$headers
		)
		
		
		[string]$url = "$airwatchServer/api/mam/blobs/uploadblob?filename=$filename&organizationgroupid=$groupID"
		Write-Host $url
		
		Write-Verbose "File Path $filePath"
		
		$response = Invoke-RestMethod -Method Post -Uri $url -Headers $headers -InFile $filePath
		
		Write-Verbose "Response 'Upload Blob' :: $response"
		
		Return $response
	}
	
	Function Create-Headers
	{
		
		Param (
			[Parameter(Mandatory = $True)]
			[string]$authString,
			[Parameter(Mandatory = $True)]
			[string]$tenantCode,
			[Parameter(Mandatory = $True)]
			[string]$acceptType,
			[Parameter(Mandatory = $True)]
			[string]$contentType
		)
		
		
		$header = @{ "Authorization" = $authString; "aw-tenant-code" = $tenantCode; "Accept" = $acceptType.ToString(); "Content-Type" = $contentType.ToString() }
		
		Return $header
	}
	
	Function Create-BasicAuthHeader
	{
		
		Param (
			[Parameter(Mandatory = $True)]
			[string]$username,
			[Parameter(Mandatory = $True)]
			[string]$password)
		
		$combined = $username + ":" + $password
		$encoding = [System.Text.Encoding]::ASCII.GetBytes($combined)
		$encodedString = [Convert]::ToBase64String($encoding)
		
		Return "Basic " + $encodedString
	}
	
	Function Map-AppDetailsJSON
	{
		
		Param (
			[Parameter(Mandatory = $True)]
			$appdetails
			
		)
		
		# Setup DeviceType and SupportedModels 
		#$appDetails | Add-Member -MemberType NoteProperty -Name "DeviceType" -Value "WinRT" -Force
		<#$appDetails | Add-Member -MemberType NoteProperty -Name "SupportedModels" -Value @{
				Model = @(@{
						ModelId   = 83
						ModelName = "Desktop"
					})
			} -Force
	#>
		# Map all table values to the AirWatch JSON format
		#$test =
		[string]$changelog = "Created by bpeppin"
		$date = ((Get-Date).AddDays(- $days)).ToString('yyyy-MM-dd')
		Write-Status "Created on $date by $($textboxAdmin.Text)"
		$applicationProperties = @{
			BlobId = $appdetails.blobID
			DeviceType = "12"
			ApplicationName = $appDetails.title
			FileName = $appDetails.FileName
			ChangeLog = $changelog
			Description = $appDetails.AdditionalInformationUrls
			Comments = "Created on $date by $($textboxAdmin.Text)"
			SupportedModels = @{
				Model		    = @(@{
						ModelId   = 83
						#ModelName = "Desktop"
					})
			}
			AutoUpdateVersion = "true"
			DeploymentOptions = @{
				WhenToInstall = @{
					DiskSpaceRequiredInKb = 0
					DevicePowerRequired   = 0
					RamRequiredInMb	      = 0
				}
				HowToInstall  = @{
					AdminPrivileges = "true"
					DeviceRestart   = $appDetails.DeviceRestart
					InstallCommand  = "powershell -executionpolicy bypass -file Install-Update.ps1 -KB KB$($appdetails.KB)"
					InstallContext		     = "Device"
					InstallTimeoutInMinutes = 60
					InstallerRebootExitCode = $appDetails.InstallerRebootCode
					InstallerSuccessExitCode = 0
					RetryCount	    = 3
					RetryIntervalInMinutes = 5
					RestartDeadlineInDays = 3
				}
				WhenToCallInstallComplete = @{
					UseAdditionalCriteria = "True"
					IdentifyApplicationBy = "UsingCustomScript"
					CustomScript		  = @{
						ScriptType			   = "PowerShell"
						CommandToRunTheScript  = "powershell -executionpolicy bypass -file Check-KB.ps1 -KB KB$($appdetails.KB)"
						CustomScriptFileBlodId = $appdetails.blobID2
						SuccessExitCode	       = 0
					}
				}
			}
			FilesOptions    = @{
				ApplicationUnInstallProcess = @{
					UseCustomScript = "true"
					CustomScript    = @{
						CustomScriptType = "Input"
						UninstallCommand = "na"
						UninstallScriptBlobId = 0
					}
				}
			}
			#DeviceType	    = $appDetails.DeviceType
			#EnableProvisioning = "false"
			#IsDependencyFile = "false"
			LocationGroupId = $appDetails.GroupId
			PushMode	    = 0
			SupportEmail    = ""
			SupportPhone = ""
			IsDependencyFile = $appDetails.Dependency
			#SupportedModels = $appDetails.SupportedModels
			SupportedProcessorArchitecture = "x86"
	
		}
		
		$json = $applicationProperties | ConvertTo-Json -Depth 10
		Write-Verbose "------- JSON to Post---------"
		Write-Verbose $json
		Write-Verbose "-----------------------------"
		Write-Verbose ""
		
		Return $json
	}
	
	$buttonSaveToWS1_Click={
		#TODO: Place custom script here
		Migrate-AppsToAirWatch -Headers $script:headers -OGID $script:ogid
		
	}
	
	$Connect_Click={
		#TODO: Place custom script here
		if (-not $textboxUsername.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter username.', 'Invalid Input')
			return
		}
		if (-not $textboxPassword.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter password.', 'Invalid Input')
			return
		}
		if (-not $textboxAPI.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter API Key.', 'Invalid Input')
			return
		}
		if (-not $textboxGroupID.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter Group ID.', 'Invalid Input')
			return
		}
		if (-not $textboxServer.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter Workspace ONE server.', 'Invalid Input')
			return
		}
	<#	if (-not $textboxAdmin.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter your name.', 'Invalid Input')
			return
		}#>
		$restUserName = Create-BasicAuthHeader -username $textboxUsername.Text -password $textboxPassword.Text
			
		#Build Headers for APIs
		$script:headers = Create-Headers -authString $restUserName `
								  -tenantCode $textboxAPI.Text `
								  -acceptType "application/json" `
								  -contentType "application/json"
		
		$groupID = $textboxGroupID.Text
		$awServer = $textboxServer.Text
		Write-Status "Validating credentials and checking groupID..."
		$og = Invoke-RestMethod -Method Get -Uri "$awServer/api/system/groups/search?groupid=$groupID" -Headers $headers
		$script:ogid = $og.LocationGroups.ID.Value
		if ($og)
		{
			Write-Status "Success!"
			$buttonSaveToWS1.Enabled = $true
		}
		return $script:headers,$script:ogid
	
	
		#$date = ((Get-Date).AddDays(- $days)).ToString('yyyy-MM-dd')
		#Write-Status "Created on $date by $($textboxAdmin.Text)"
	}
	
	
	$button1_Click={
		#TODO: Place custom script here
		[System.Windows.Forms.MessageBox]::Show("App Name: $($response.ApplicationName)", "Success", [System.Windows.Forms.MessageBoxButtons]::OKCancel, [System.Windows.Forms.MessageBoxIcon]::Information)
		
		if ($checkboxDependency.Checked -eq $true)
		{
			$dependency = 'true'
			Write-Status $dependency
		}
		else
		{
			$dependency = 'false'
			Write-Status $dependency
		}
	<#	if ($radiobuttonDoNotRestart.Checked -eq $true)
		{
			$DeviceRestart = "DoNotRestart"
			Write-Status $DeviceRestart
		}
		if ($radiobuttonForceRestart.Checked -eq $true)
		{
			$DeviceRestart = "ForceRestart"
			Write-Status $DeviceRestart
			
		}
		if ($radiobuttonUserDeferredRestart.Checked -eq $true)
		{
			$DeviceRestart = "RestartIfNeeded"
			Write-Status $DeviceRestart
			
		}#>
	}
	
	$checkboxDependency_CheckedChanged={
		#TODO: Place custom script here
		If ($checkboxDependency.Checked -eq $true)
		{
			
			$radiobuttonUserDeferredRestart.Enabled = $false
			$radiobuttonDoNotRestart.Checked = $true
		}
		else
		{
	
			$radiobuttonUserDeferredRestart.Enabled = $True
		}
		
	}
	
	$linklabelForMoreInfoClickHere_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.LinkLabelLinkClickedEventArgs]
		#TODO: Place custom script here
		start https://github.com/brookspeppin/WorkspaceONE/tree/master/Windows-Updater
	}
	
	$labelCredits_Click={
		#TODO: Place custom script here
		[System.Windows.Forms.MessageBox]::Show("Written by: Brooks Peppin`n-David Sequra for his posting of the Windows Updates catalog on his Github page. Check out his great tool OSDBuilder!`n-Chris Halstead (@chrisdhalstead) for some of his API/JSON functions.", "Credits", [System.Windows.Forms.MessageBoxButtons]::OKCancel, [System.Windows.Forms.MessageBoxIcon]::Information)
		
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formWindowsUpdaterToolFo.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_OSVersion = $OSVersion.Text
		$script:MainForm_OSVersion_SelectedItem = $OSVersion.SelectedItem
		$script:MainForm_datagridview1 = $datagridview1.SelectedCells
		if ($datagridview1.SelectionMode -eq 'FullRowSelect')
		{ $script:MainForm_datagridview1_SelectedObjects = $datagridview1.SelectedRows | Select-Object -ExpandProperty DataBoundItem }
		else { $script:MainForm_datagridview1_SelectedObjects = $datagridview1.SelectedCells | Select-Object -ExpandProperty RowIndex -Unique | ForEach-Object { if ($_ -ne -1) { $datagridview1.Rows[$_].DataBoundItem } } }
		$script:MainForm_radiobuttonUserDeferredRestart = $radiobuttonUserDeferredRestart.Checked
		$script:MainForm_checkboxDependency = $checkboxDependency.Checked
		$script:MainForm_radiobuttonForceRestart = $radiobuttonForceRestart.Checked
		$script:MainForm_radiobuttonDoNotRestart = $radiobuttonDoNotRestart.Checked
		$script:MainForm_textboxGroupID = $textboxGroupID.Text
		$script:MainForm_textboxServer = $textboxServer.Text
		$script:MainForm_textboxAPI = $textboxAPI.Text
		$script:MainForm_textboxUsername = $textboxUsername.Text
		$script:MainForm_textboxPassword = $textboxPassword.Text
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$labelCredits.remove_Click($labelCredits_Click)
			$linklabelForMoreInfoClickHere.remove_LinkClicked($linklabelForMoreInfoClickHere_LinkClicked)
			$OSVersion.remove_SelectedIndexChanged($OSVersion_SelectedIndexChanged)
			$buttonGetUpdates.remove_Click($buttonGetUpdates_Click)
			$Download.remove_Click($Download_Click)
			$datagridview1.remove_CellContentClick($datagridview1_CellContentClick)
			$checkboxDependency.remove_CheckedChanged($checkboxDependency_CheckedChanged)
			$buttonSaveToWS1.remove_Click($buttonSaveToWS1_Click)
			$Connect.remove_Click($Connect_Click)
			$formWindowsUpdaterToolFo.remove_Load($formWindowsUpdaterToolFo_Load)
			$formWindowsUpdaterToolFo.remove_Load($Form_StateCorrection_Load)
			$formWindowsUpdaterToolFo.remove_Closing($Form_StoreValues_Closing)
			$formWindowsUpdaterToolFo.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formWindowsUpdaterToolFo.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupbox1.SuspendLayout()
	$groupbox3.SuspendLayout()
	#
	# formWindowsUpdaterToolFo
	#
	$formWindowsUpdaterToolFo.Controls.Add($labelCredits)
	$formWindowsUpdaterToolFo.Controls.Add($linklabelForMoreInfoClickHere)
	$formWindowsUpdaterToolFo.Controls.Add($label2)
	$formWindowsUpdaterToolFo.Controls.Add($label1)
	$formWindowsUpdaterToolFo.Controls.Add($groupbox2)
	$formWindowsUpdaterToolFo.Controls.Add($statusbar1)
	$formWindowsUpdaterToolFo.Controls.Add($datagridview1)
	$formWindowsUpdaterToolFo.Controls.Add($groupbox1)
	$formWindowsUpdaterToolFo.AutoScaleDimensions = '7, 17'
	$formWindowsUpdaterToolFo.AutoScaleMode = 'Font'
	$formWindowsUpdaterToolFo.BackColor = '64, 64, 64'
	$formWindowsUpdaterToolFo.ClientSize = '1041, 648'
	$formWindowsUpdaterToolFo.Font = 'Segoe UI, 9.75pt'
	$formWindowsUpdaterToolFo.ForeColor = 'White'
	#region Binary Data
	$formWindowsUpdaterToolFo.Icon = [System.Convert]::FromBase64String('
AAABAAUAEBAAAAEAIABoBAAAVgAAABgYAAABACAAiAkAAL4EAAAgIAAAAQAgAKgQAABGDgAAMDAA
AAEAIACoJQAA7h4AAAAAAAABACAAWCUAAJZEAAAoAAAAEAAAACAAAAABACAAAAAAAAAEAADougEA
6LoBAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABBAIAATsCAAGUAgAB0QIAAeoCAAHnAgABxwIAAYIC
AAEqAgABAQIAAQAAAAAAAAAAAAIAAQACAAEAAgABFAIAAYYCAAHpAgAB/wIAAf4CAAH3AgAB+AIA
Af8CAAH+AgAB2wIAAWoCAAEJAgABAAAAAAACAAEAAgABFQIAAagCAAH+AgAB8wIAAaoCAAFgAgAB
PwIAAUICAAFsAgABvQIAAfoCAAH4AgABhgIAAQgCAAEAAgABBQIAAYwCAAH/AgAB4QIAAVcCAAEH
AgABAAIAAQACAAEAAgABAAIAAQ4CAAF1AgAB8QIAAfgCAAFkAgABAAIAAUYCAAHsAgAB8QIAAVMC
AAEAAgABAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAwIAAXkCAAH+AgAB0wIAASICAAGlAgAB/wIA
AZ4CAAEFAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEUAgABxgIAAf4CAAFqAgAB
4wIAAfsCAAFQAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAVoCAAG/
AgABRQIAAfwCAAHsAgABLgIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQAC
AAECAgABCAIAAQECAAH8AgAB7AIAAS4CAAEAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEbAgABLwIA
AS8CAAEvAgABLwIAAS4CAAEbAgAB4wIAAfsCAAFPAgABAAIAAQAAAAAAAAAAAAIAAQACAAEaAgAB
xgIAAfICAAHwAgAB7gIAAe0CAAHtAgAB0AIAAaUCAAH/AgABngIAAQQCAAEAAAAAAAAAAAACAAEA
AgABFAIAAaoCAAHXAgAB1AIAAe8CAAH/AgAB/wIAAf8CAAFGAgAB7QIAAfECAAFTAgABAAIAAQAA
AAAAAgABAAIAAQACAAEKAgABEQIAATsCAAHbAgAB/wIAAf8CAAH/AgABBQIAAYwCAAH/AgAB4QIA
AVcCAAEHAgABAAIAAQACAAEAAgABAAIAASYCAAG5AgAB/wIAAecCAAH1AgAB/wIAAQACAAEVAgAB
qAIAAf4CAAHzAgABqwIAAWECAAFAAgABRQIAAXkCAAHWAgAB/wIAAeACAAFmAgAB4gIAAf8CAAEA
AgABAAIAARQCAAGGAgAB6QIAAf8CAAH+AgAB9wIAAfkCAAH/AgAB/gIAAdACAAFFAgABIgIAAeMC
AAH/AAAAAAAAAAACAAEAAgABBAIAATsCAAGUAgAB0QIAAeoCAAHnAgABygIAAYMCAAEkAgABAAIA
AQ8CAAGwAgABxuAHAADAAwAAgAEAAAPBAAAP4AAAD/AAAB/4AAAf+AAAH4AAAB8AAAAPAAAAD4AA
AAPAAACAAAAAwAAAAOAIAAAoAAAAGAAAADAAAAABACAAAAAAAAAJAADougEA6LoBAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAwIAAScCAAFsAgABqgIAAdACAAHfAgAB3AIAAcYC
AAGYAgABVQIAARcCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIA
AQACAAEkAgABigIAAd0CAAH7AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB9gIAAckCAAFoAgAB
EQIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAwIAAVUCAAHWAgAB/wIAAf8CAAH/
AgAB/wIAAf4CAAH7AgAB/AIAAf8CAAH/AgAB/wIAAf8CAAH7AgABtQIAAS8CAAEAAgABAAAAAAAA
AAAAAAAAAAIAAQACAAEDAgABawIAAe8CAAH/AgAB/wIAAfsCAAHUAgABkwIAAWMCAAFOAgABUgIA
AW8CAAGnAgAB5QIAAf8CAAH/AgAB/wIAAdQCAAE7AgABAAIAAQAAAAAAAgABAAIAAQACAAFbAgAB
8AIAAf8CAAH/AgAB4QIAAXECAAEaAgABAQIAAQAAAAAAAgABAAIAAQACAAEEAgABLQIAAZcCAAHz
AgAB/wIAAf8CAAHRAgABKwIAAQACAAEAAgABAAIAAS0CAAHcAgAB/wIAAf8CAAHNAgABOQIAAQAC
AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQYCAAFlAgAB7AIAAf8CAAH/AgABqwIA
AQwCAAEAAgABBQIAAZoCAAH/AgAB/wIAAdsCAAE2AgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAIAAQACAAEBAgABaQIAAfYCAAH/AgAB+AIAAVkCAAEAAgABOAIAAecCAAH/
AgAB+QIAAWQCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
AAEAAgABCAIAAaMCAAH/AgAB/wIAAbcCAAENAgABiAIAAf8CAAH/AgABxAIAARECAAEAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAATwCAAHuAgAB
/wIAAekCAAE0AgAByAIAAf8CAAH/AgABegIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQkCAAGlAgAB/wIAAcoCAAEhAgAB7QIAAf8C
AAH4AgABRwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAgABAAIAAQACAAEZAgABUAIAASgCAAEAAgAB/AIAAf8CAAHuAgABMQIAAQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAgAB/AIAAf8CAAHuAgABMQIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAIAAQACAAEAAgABAQIAAQECAAEBAgABAQIAAQECAAEBAgABAQIAAQECAAEAAgAB7QIA
Af8CAAH4AgABRwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAASECAAGLAgAB
owIAAaMCAAGjAgABowIAAaMCAAGjAgABowIAAZwCAAFTAgAByAIAAf8CAAH/AgABeQIAAQACAAEA
AAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAYgCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAHrAgABiAIAAf8CAAH/AgABwwIAARECAAEAAAAAAAAAAAAAAAAAAAAAAAAA
AAACAAEAAgABAAIAAXECAAH6AgAB/wIAAf8CAAH/AgAB/gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
OAIAAecCAAH/AgAB+QIAAWQCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQ0CAAFP
AgABZQIAAWQCAAFkAgABuwIAAf8CAAH/AgAB/wIAAf8CAAH/AgABBQIAAZoCAAH/AgAB/wIAAdsC
AAE2AgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAE9AgAB4QIA
Af8CAAH/AgAB/wIAAf8CAAH/AgABAAIAAS0CAAHcAgAB/wIAAf8CAAHOAgABOQIAAQACAAEAAAAA
AAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAATUCAAHRAgAB/wIAAf8CAAH2AgAB+wIAAf8CAAH/
AgABAAIAAQACAAFbAgAB8AIAAf8CAAH/AgAB4QIAAXICAAEaAgABAQIAAQAAAAAAAgABAAIAAQAC
AAELAgABWQIAAdgCAAH/AgAB/wIAAfICAAGMAgAB5gIAAf8CAAH/AAAAAAIAAQACAAEDAgABawIA
Ae8CAAH/AgAB/wIAAfwCAAHVAgABlQIAAWUCAAFQAgABVQIAAXgCAAG7AgAB9QIAAf8CAAH/AgAB
+QIAAYACAAErAgAB5QIAAf8CAAH/AAAAAAAAAAACAAEAAgABAwIAAVUCAAHWAgAB/wIAAf8CAAH/
AgAB/wIAAf4CAAH7AgAB/AIAAf8CAAH/AgAB/wIAAf8CAAHzAgABgQIAAQgCAAEkAgAB5QIAAf8C
AAH/AAAAAAAAAAAAAAAAAgABAAIAAQACAAEkAgABigIAAd0CAAH7AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB9wIAAcMCAAFTAgABBQIAAQACAAEdAgAB3AIAAf8CAAH0AAAAAAAAAAAAAAAAAAAA
AAAAAAACAAEAAgABAwIAAScCAAFsAgABqgIAAdACAAHfAgAB3QIAAckCAAGeAgABWQIAARUCAAEA
AgABAAIAAQACAAEEAgABewIAAdgCAAGE/AB/APgAHwDgAA8AwAAHAMA8AwCB/wEAA/+BAAf/wAAH
/+AAD//gAA//8QAP//8AD/4BAA/4AAAP+AAAB/gAAAf4AAAD/4AAgf8AAMA8AADAAAAA4AAAAPgA
EAD8AHAAKAAAACAAAABAAAAAAQAgAAAAAAAAEAAA6LoBAOi6AQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEUAgABRwIAAYECAAGuAgAByQIAAdQCAAHR
AgABvwIAAZwCAAFoAgABLwIAAQgCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQECAAEjAgABeQIAAcgCAAHxAgAB/gIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfsCAAHkAgABqgIAAVICAAENAgABAAIAAQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEQAgABcAIAAdoCAAH+
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB9wIAAbUC
AAE/AgABAgIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABJwIA
Aa4CAAH7AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAekCAAFzAgABCgIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEA
AgABAAIAATQCAAHLAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAHwAgABwwIAAZECAAFvAgABYAIAAWMC
AAF6AgABpQIAAdgCAAH6AgAB/wIAAf8CAAH/AgAB/wIAAfkCAAGPAgABDgIAAQAAAAAAAAAAAAAA
AAAAAAAAAgABAAIAAQACAAEsAgABzQIAAf8CAAH/AgAB/wIAAf8CAAHuAgABmgIAAT0CAAENAgAB
AAIAAQAAAAAAAgABAAIAAQACAAEDAgABGwIAAV8CAAHDAgAB+wIAAf8CAAH/AgAB/wIAAfsCAAGL
AgABCAIAAQAAAAAAAAAAAAAAAAACAAEAAgABFQIAAbcCAAH/AgAB/wIAAf8CAAH/AgAByQIAAUYC
AAEEAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAARQCAAF8AgAB7QIA
Af8CAAH/AgAB/wIAAfcCAAFqAgABAAIAAQAAAAAAAgABAAIAAQECAAGAAgAB/gIAAf8CAAH/AgAB
/wIAAbUCAAEjAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AgABAAIAAQICAAFXAgAB5gIAAf8CAAH/AgAB/wIAAeECAAEzAgABAAIAAQACAAEAAgABMgIAAeUC
AAH/AgAB/wIAAf8CAAHCAgABIAIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAFcAgAB8AIAAf8CAAH/AgAB/wIAAaICAAEGAgAB
AAIAAQICAAGRAgAB/wIAAf8CAAH/AgAB5gIAATsCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQQCAAGJAgAB/wIAAf8C
AAH/AgAB7gIAATwCAAEAAgABJwIAAdsCAAH/AgAB/wIAAf8CAAGEAgABAQIAAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAB
AAIAAR4CAAHSAgAB/wIAAf8CAAH/AgABjgIAAQACAAFpAgAB+gIAAf8CAAH/AgAB4gIAASkCAAEA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAACAAEAAgABAAIAAXkCAAH/AgAB/wIAAf8CAAHFAgABDwIAAaoCAAH/AgAB/wIA
Af8CAAGlAgABBAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABKwIAAeACAAH/AgAB/wIAAaUCAAEH
AgAB1wIAAf8CAAH/AgAB/wIAAWwCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEBAgABUAIA
AbACAAGaAgABKAIAAQACAAHyAgAB/wIAAf8CAAH4AgABRwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAIAAQACAAEAAgABBQIAAQMCAAEAAgABAAIAAf0CAAH/AgAB/wIAAfECAAE2AgABAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAB/QIAAf8CAAH/AgAB
8QIAATYCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
AAHyAgAB/wIAAf8CAAH3AgABRwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAgABAAIAAQACAAELAgABNgIAAUICAAFCAgABQgIAAUICAAFCAgABQgIAAUICAAFCAgAB
QgIAAUICAAEvAgABBwIAAdcCAAH/AgAB/wIAAf8CAAFrAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABCgIAAZUCAAHxAgAB9gIAAfYCAAH2AgAB9gIAAfYC
AAH2AgAB9gIAAfYCAAH2AgAB9wIAAeoCAAGFAgABqgIAAf8CAAH/AgAB/wIAAaUCAAEEAgABAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAExAgAB7QIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfMCAAFpAgAB+gIAAf8CAAH/
AgAB4QIAASkCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAASQC
AAHeAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
AScCAAHbAgAB/wIAAf8CAAH/AgABhAIAAQECAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAACAAEAAgABAQIAAVUCAAG5AgABxwIAAcYCAAHGAgABxQIAAdQCAAH9AgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH/AgABAgIAAZECAAH/AgAB/wIAAf8CAAHmAgABOwIAAQACAAEAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQgCAAENAgABDQIAAQwCAAEQAgABlAIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAEAAgABMgIAAeUCAAH/AgAB/wIAAf8CAAHCAgAB
IAIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEA
AgABAAIAAV4CAAHyAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAQACAAEBAgABgAIAAf4C
AAH/AgAB/wIAAf8CAAG2AgABIwIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAgABAAIAAQACAAFNAgAB5AIAAf8CAAH/AgAB/wIAAf0CAAH+AgAB/wIAAf8CAAH/AAAA
AAIAAQACAAEVAgABtwIAAf8CAAH/AgAB/wIAAf8CAAHKAgABRwIAAQUCAAEAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAIAAQACAAEGAgABXQIAAeQCAAH/AgAB/wIAAf8CAAH7AgABsgIAAesC
AAH/AgAB/wIAAf8AAAAAAgABAAIAAQACAAEsAgABzQIAAf8CAAH/AgAB/wIAAf8CAAHuAgABnAIA
AT8CAAEOAgABAQIAAQAAAAAAAgABAAIAAQACAAEHAgABMwIAAZoCAAHzAgAB/wIAAf8CAAH/AgAB
/wIAAakCAAE5AgAB5QIAAf8CAAH/AgAB/wAAAAAAAAAAAgABAAIAAQACAAE0AgABywIAAf8CAAH/
AgAB/wIAAf8CAAH/AgAB8QIAAcUCAAGUAgABcgIAAWMCAAFnAgABggIAAbQCAAHqAgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAG+AgABHgIAASUCAAHnAgAB/wIAAf8CAAH/AAAAAAAAAAAAAAAAAgABAAIA
AQACAAEnAgABrgIAAfsCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH+AgABuQIAASUCAAEAAgABJwIAAecCAAH/AgAB/wIAAf8AAAAA
AAAAAAAAAAAAAAAAAgABAAIAAQACAAEQAgABcAIAAdoCAAH+AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB8QIAAZICAAEZAgABAAIAAQACAAEmAgAB5gIA
Af8CAAH/AgAB/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEBAgABIwIAAXkCAAHIAgAB
8QIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH8AgAB5wIAAakCAAFGAgABBgIAAQAAAAAA
AgABAAIAARICAAHFAgAB/wIAAf8CAAHWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
AAEAAgABAAIAARQCAAFHAgABgQIAAa4CAAHJAgAB1AIAAdECAAHCAgABogIAAXACAAE0AgABCAIA
AQACAAEAAAAAAAAAAAACAAEAAgABAAIAAUUCAAG/AgABugIAAUb/wAP//gAA//wAAD/4AAAf8AAA
D+AHwAfAH/gHgH/8A4D//wEB//8BAf//gQP//8AD///AB///wQf///MH////B////wf/wAAH/4AA
A/+AAAP/gAAB/4AAAf/gAID//gCAf/wAwB/wAOADwADwAAAA+AAAIPwAAGD+AADg/8AD8CgAAAAw
AAAAYAAAAAEAIAAAAAAAACQAAOi6AQDougEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAQIAARICAAE2AgAB
YQIAAYcCAAGkAgABtQIAAbwCAAG2AgABqgIAAZECAAFuAgABRAIAAR4CAAEEAgABAAIAAQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIA
AQ8CAAFEAgABiwIAAcYCAAHpAgAB+QIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH8AgAB
8AIAAdUCAAGjAgABXgIAAR4CAAECAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAgABAAIAAQACAAEVAgABZAIAAcACAAH0AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB+wIAAdkCAAGIAgABLQIAAQICAAEAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABCQIAAVYCAAHFAgAB+gIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB4gIAAYICAAEdAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEjAgABngIAAfUCAAH/
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf4CAAHKAgABTAIAAQMCAAEAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgAB
AQIAAUICAAHNAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB7QIAAXgCAAEMAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAIAAQACAAECAgABVwIAAeMCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH6AgAB4wIAAcICAAGjAgABjwIAAYUCAAGJAgABmQIAAbUCAAHWAgAB8wIAAf8CAAH/
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfkCAAGTAgABEQIAAQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQECAAFaAgAB6QIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB5AIAAaECAAFXAgABJgIAAQwCAAECAgABAAIAAQACAAEAAgAB
AQIAAQcCAAEZAgABQQIAAYMCAAHOAgAB+gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH8
AgABmwIAARACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAUsC
AAHmAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAegCAAGMAgABLgIAAQQCAAEAAgABAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEXAgABZAIAAcwCAAH9AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/AIAAY0CAAEIAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAIAAQACAAEAAgABLgIAAdYCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH9AgABuAIAATsC
AAEDAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAACAAEAAgABAAIAARsCAAGIAgAB7wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfYCAAFrAgAB
AQIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEQAgABrwIAAf8CAAH/AgAB/wIAAf8CAAH/
AgAB/wIAAfcCAAGOAgABFQIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEEAgABVgIAAd4CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAHkAgABOwIAAQACAAEAAAAAAAAAAAAAAAAAAgABAAIAAQACAAFvAgAB
+wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB9gIAAXwCAAEJAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
AAEAAgABAAIAAUECAAHZAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgABtgIAARACAAEAAAAAAAAA
AAAAAAAAAgABAAIAAScCAAHaAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH7AgABhgIAAQgCAAEAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAFFAgAB4wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB+gIAAWUCAAEAAgABAAAAAAACAAEAAgABAQIAAYcCAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAGpAgABDwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEA
AgABYwIAAfUCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAcsCAAEYAgABAAAAAAACAAEAAgABJAIAAdwC
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAdkCAAErAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAACAAEAAgABCAIAAZ0CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfsCAAFj
AgABAAIAAQACAAEAAgABbQIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB/AIAAW4CAAEAAgABAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAS0CAAHfAgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAG3AgABCwIAAQACAAEMAgABtwIAAf8CAAH/AgAB/wIAAf8CAAH/
AgABzAIAARgCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAgABAAIAAQACAAGGAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAHsAgABNQIAAQACAAE0AgAB
5gIAAf8CAAH/AgAB/wIAAf8CAAH/AgABdgIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAExAgAB6AIAAf8CAAH/AgAB/wIA
Af8CAAH8AgABVQIAAQACAAFrAgAB+wIAAf8CAAH/AgAB/wIAAf8CAAHoAgABLwIAAQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQAC
AAEHAgABqgIAAf8CAAH/AgAB/wIAAf8CAAHvAgABOwIAAQACAAGgAgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAG8AgABCwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABPwIAAd8CAAH/AgAB/wIAAfsCAAGVAgABCAIAAQAC
AAHKAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAGLAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAQIAATYCAAGM
AgABngIAAWQCAAEQAgABAAAAAAACAAHmAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAFmAgABAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAIAAQACAAEAAgABAQIAAQACAAEAAAAAAAAAAAACAAH2AgAB/wIAAf8CAAH/
AgAB/wIAAfkCAAFNAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAACAAH9AgAB/wIAAf8CAAH/AgAB/wIAAfYCAAFCAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAH9AgAB/wIAAf8CAAH/AgAB/wIAAfYCAAFCAgAB
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAH2AgAB/wIA
Af8CAAH/AgAB/wIAAfkCAAFNAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAACAAHmAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAFlAgABAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAIAAQACAAEBAgABJAIAAVACAAFYAgABVwIAAVcCAAFXAgABVwIAAVcCAAFXAgABVwIAAVcCAAFX
AgABVwIAAVcCAAFXAgABWAIAAVcCAAFIAgABFwIAAQACAAHKAgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAGLAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAFXAgAB3AIAAfsCAAH8AgAB/AIAAfwCAAH8AgAB
/AIAAfwCAAH8AgAB/AIAAfwCAAH8AgAB/AIAAfwCAAH8AgAB/AIAAfwCAAH4AgABwQIAATcCAAGg
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAG8AgABCwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAASECAAHXAgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAcECAAFrAgAB+wIAAf8CAAH/AgAB/wIAAf8CAAHnAgABLgIAAQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAgABAAIAAUcCAAH3AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfkCAAE0AgAB5gIAAf8CAAH/AgAB
/wIAAf8CAAH/AgABdQIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAATYCAAHuAgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAEMAgABtwIAAf8CAAH/AgAB/wIAAf8CAAH/AgABywIAARgCAAEAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQkCAAGb
AgAB/gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAEAAgABbQIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB/AIA
AW0CAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAgABAAIAAQACAAEUAgABcwIAAa8CAAG3AgABtwIAAbcCAAG3AgABtwIAAbYCAAG4
AgAB6gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAEAAgABJAIAAdwC
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAdkCAAEqAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQUCAAEHAgAB
BwIAAQcCAAEHAgABBwIAAQQCAAFEAgAB6AIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAEAAgABAQIAAYcCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAGoAgABDwIAAQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAR0CAAHCAgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAgABAAIAAScCAAHaAgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH7AgABhQIAAQcCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABDgIA
AaECAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAgAB
AAIAAQACAAFvAgAB+wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB9gIAAX0CAAEJAgABAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAIAAQACAAEJAgABiAIAAfsCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8AAAAAAAAAAAIAAQACAAEQAgABrwIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAfcCAAGPAgABFQIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQ0CAAGGAgAB+AIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAekCAAH3AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAAAAAAIAAQACAAEAAgABLgIA
AdYCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH9AgABugIAAT0CAAEDAgABAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABHwIAAZ4CAAH6
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB4gIAAW8CAAHoAgAB/wIAAf8CAAH/AgAB/wIAAf8A
AAAAAAAAAAAAAAACAAEAAgABAAIAAUsCAAHmAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
AekCAAGPAgABMAIAAQUCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgAB
AAIAAQwCAAFVAgABywIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAHxAgABXwIAASwCAAHp
AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAAAAAAAAAAAAAAAAAgABAAIAAQECAAFaAgAB6QIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB5gIAAaQCAAFaAgABKAIAAQ4CAAEDAgABAAIA
AQACAAEAAgABAgIAAQsCAAEnAgABYgIAAbcCAAH1AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAfkCAAF9AgABAgIAASsCAAHpAgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAAAAAAAAAAAAAAAA
AAAAAAIAAQACAAECAgABVwIAAeMCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH7AgAB5QIAAcUCAAGnAgABlAIAAYoCAAGOAgABoQIAAb8CAAHjAgAB+wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB+wIAAY8CAAELAgABAAIAASsCAAHpAgAB/wIAAf8CAAH/AgAB
/wIAAf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAQIAAUICAAHNAgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH4AgABjgIAAQ4CAAEAAgABAAIA
ASsCAAHpAgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAB
AAIAAQACAAEjAgABngIAAfUCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAe0C
AAF4AgABCgIAAQAAAAAAAgABAAIAASsCAAHpAgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABCQIAAVYCAAHFAgAB+gIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH9AgAByQIAAUwCAAEDAgABAAAAAAAAAAAAAgABAAIAASoCAAHoAgAB/wIAAf8C
AAH/AgAB/wIAAf4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIA
AQACAAEVAgABZAIAAcACAAH0AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/AIAAdUCAAF4AgABGgIAAQACAAEAAAAAAAAAAAAAAAAA
AgABAAIAARcCAAHRAgAB/wIAAf8CAAH/AgAB/wIAAd8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQ8CAAFEAgABiwIAAcYCAAHpAgAB+QIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH9AgAB9AIAAdwCAAGrAgABYgIAAR0CAAEBAgAB
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAFqAgAB8gIAAf8CAAH/AgAB6wIAAWkAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
AAEAAgABAQIAARICAAE2AgABYQIAAYcCAAGkAgABtQIAAbwCAAG3AgABrQIAAZYCAAF3AgABTQIA
ASQCAAEHAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEHAgAB
WwIAAa4CAAGqAgABUgIAAQb//wAB//8AAP/8AAA//wAA//AAAA//AAD/wAAAB/8AAP+AAAAB/wAA
/gAAAAD/AAD8AAAAAH8AAPgAA4AAPwAA+AA//AAfAADwAP//AA8AAOAD//+ADwAA4Af//+AHAADA
D///8AcAAIAf///4AwAAgD////gDAACAf////AEAAAB////+AQAAAP////4BAAAA/////gEAAAD/
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')
	#endregion
	$System_Windows_Forms_MenuStrip_3 = New-Object 'System.Windows.Forms.MenuStrip'
	$System_Windows_Forms_MenuStrip_3.Location = '0, 0'
	$System_Windows_Forms_MenuStrip_3.Name = ''
	$System_Windows_Forms_MenuStrip_3.Padding = '7, 2, 0, 2'
	$System_Windows_Forms_MenuStrip_3.Size = '1041, 24'
	$System_Windows_Forms_MenuStrip_3.TabIndex = 0
	$System_Windows_Forms_MenuStrip_3.Visible = $False
	$formWindowsUpdaterToolFo.MainMenuStrip = $System_Windows_Forms_MenuStrip_3
	$formWindowsUpdaterToolFo.Margin = '4, 3, 4, 3'
	$formWindowsUpdaterToolFo.MaximizeBox = $False
	$formWindowsUpdaterToolFo.Name = 'formWindowsUpdaterToolFo'
	$formWindowsUpdaterToolFo.StartPosition = 'CenterScreen'
	$formWindowsUpdaterToolFo.Text = 'Windows Updater Tool for Workspace ONE'
	$formWindowsUpdaterToolFo.add_Load($formWindowsUpdaterToolFo_Load)
	#
	# labelCredits
	#
	$labelCredits.AutoSize = $True
	$labelCredits.Location = '23, 590'
	$labelCredits.Margin = '4, 0, 4, 0'
	$labelCredits.Name = 'labelCredits'
	$labelCredits.Size = '46, 22'
	$labelCredits.TabIndex = 24
	$labelCredits.Text = 'Credits'
	$labelCredits.UseCompatibleTextRendering = $True
	$labelCredits.add_Click($labelCredits_Click)
	#
	# linklabelForMoreInfoClickHere
	#
	$linklabelForMoreInfoClickHere.LinkColor = 'DeepSkyBlue'
	$linklabelForMoreInfoClickHere.Location = '23, 129'
	$linklabelForMoreInfoClickHere.Margin = '4, 0, 4, 0'
	$linklabelForMoreInfoClickHere.Name = 'linklabelForMoreInfoClickHere'
	$linklabelForMoreInfoClickHere.Size = '248, 30'
	$linklabelForMoreInfoClickHere.TabIndex = 23
	$linklabelForMoreInfoClickHere.TabStop = $True
	$linklabelForMoreInfoClickHere.Text = 'For more info, click here.'
	$linklabelForMoreInfoClickHere.UseCompatibleTextRendering = $True
	$linklabelForMoreInfoClickHere.add_LinkClicked($linklabelForMoreInfoClickHere_LinkClicked)
	#
	# label2
	#
	$label2.AutoSize = $True
	$label2.Location = '845, 595'
	$label2.Margin = '4, 0, 4, 0'
	$label2.Name = 'label2'
	$label2.Size = '0, 20'
	$label2.TabIndex = 22
	$label2.UseCompatibleTextRendering = $True
	#
	# label1
	#
	$label1.AutoSize = $True
	$label1.Location = '23, 24'
	$label1.Margin = '4, 0, 4, 0'
	$label1.Name = 'label1'
	$label1.Size = '0, 20'
	$label1.TabIndex = 21
	$label1.UseCompatibleTextRendering = $True
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($labelSelectWindows10Versi)
	$groupbox2.Controls.Add($OSVersion)
	$groupbox2.Controls.Add($buttonGetUpdates)
	$groupbox2.Controls.Add($Download)
	$groupbox2.BackColor = 'Transparent'
	$groupbox2.Location = '23, 151'
	$groupbox2.Margin = '4, 4, 4, 4'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Padding = '4, 4, 4, 4'
	$groupbox2.Size = '371, 162'
	$groupbox2.TabIndex = 20
	$groupbox2.TabStop = $False
	$groupbox2.UseCompatibleTextRendering = $True
	#
	# labelSelectWindows10Versi
	#
	$labelSelectWindows10Versi.AutoSize = $True
	$labelSelectWindows10Versi.Location = '96, 22'
	$labelSelectWindows10Versi.Margin = '4, 0, 4, 0'
	$labelSelectWindows10Versi.Name = 'labelSelectWindows10Versi'
	$labelSelectWindows10Versi.Size = '164, 22'
	$labelSelectWindows10Versi.TabIndex = 11
	$labelSelectWindows10Versi.Text = 'Select Windows 10 Version'
	$labelSelectWindows10Versi.UseCompatibleTextRendering = $True
	#
	# OSVersion
	#
	$OSVersion.FormattingEnabled = $True
	[void]$OSVersion.Items.Add('2004 x64')
	[void]$OSVersion.Items.Add('1909 x64')
	[void]$OSVersion.Items.Add('1903 x64')
	[void]$OSVersion.Items.Add('1809 x64')
	$OSVersion.Location = '96, 48'
	$OSVersion.Margin = '4, 3, 4, 3'
	$OSVersion.Name = 'OSVersion'
	$OSVersion.Size = '165, 25'
	$OSVersion.TabIndex = 10
	$OSVersion.add_SelectedIndexChanged($OSVersion_SelectedIndexChanged)
	#
	# buttonGetUpdates
	#
	$buttonGetUpdates.BackColor = 'White'
	$buttonGetUpdates.ForeColor = 'Black'
	$buttonGetUpdates.Location = '64, 96'
	$buttonGetUpdates.Margin = '4, 3, 4, 3'
	$buttonGetUpdates.Name = 'buttonGetUpdates'
	$buttonGetUpdates.Size = '105, 44'
	$buttonGetUpdates.TabIndex = 12
	$buttonGetUpdates.Text = 'Get Updates'
	$buttonGetUpdates.UseCompatibleTextRendering = $True
	$buttonGetUpdates.UseVisualStyleBackColor = $False
	$buttonGetUpdates.add_Click($buttonGetUpdates_Click)
	#
	# Download
	#
	$Download.BackColor = 'White'
	$Download.ForeColor = 'Black'
	$Download.Location = '202, 96'
	$Download.Margin = '4, 3, 4, 3'
	$Download.Name = 'Download'
	$Download.Size = '105, 44'
	$Download.TabIndex = 14
	$Download.Text = 'Download'
	$Download.UseCompatibleTextRendering = $True
	$Download.UseVisualStyleBackColor = $False
	$Download.add_Click($Download_Click)
	#
	# statusbar1
	#
	$statusbar1.Font = 'Segoe UI, 9.75pt'
	$statusbar1.Location = '0, 620'
	$statusbar1.Margin = '4, 3, 4, 3'
	$statusbar1.Name = 'statusbar1'
	$statusbar1.Size = '1041, 28'
	$statusbar1.TabIndex = 17
	#
	# datagridview1
	#
	$System_Windows_Forms_DataGridViewCellStyle_1 = New-Object 'System.Windows.Forms.DataGridViewCellStyle'
	$System_Windows_Forms_DataGridViewCellStyle_1.Font = 'Segoe UI, 9.75pt'
	$System_Windows_Forms_DataGridViewCellStyle_1.ForeColor = 'Black'
	$System_Windows_Forms_DataGridViewCellStyle_1.SelectionForeColor = 'Black'
	$datagridview1.AlternatingRowsDefaultCellStyle = $System_Windows_Forms_DataGridViewCellStyle_1
	$datagridview1.ColumnHeadersHeightSizeMode = 'AutoSize'
	$System_Windows_Forms_DataGridViewCellStyle_2 = New-Object 'System.Windows.Forms.DataGridViewCellStyle'
	$System_Windows_Forms_DataGridViewCellStyle_2.Alignment = 'MiddleLeft'
	$System_Windows_Forms_DataGridViewCellStyle_2.BackColor = 'Window'
	$System_Windows_Forms_DataGridViewCellStyle_2.Font = 'Segoe UI, 9.75pt'
	$System_Windows_Forms_DataGridViewCellStyle_2.ForeColor = 'Black'
	$System_Windows_Forms_DataGridViewCellStyle_2.SelectionBackColor = 'Highlight'
	$System_Windows_Forms_DataGridViewCellStyle_2.SelectionForeColor = 'HighlightText'
	$System_Windows_Forms_DataGridViewCellStyle_2.WrapMode = 'False'
	$datagridview1.DefaultCellStyle = $System_Windows_Forms_DataGridViewCellStyle_2
	$datagridview1.Location = '21, 321'
	$datagridview1.Margin = '4, 3, 4, 3'
	$datagridview1.MultiSelect = $False
	$datagridview1.Name = 'datagridview1'
	$datagridview1.SelectionMode = 'FullRowSelect'
	$datagridview1.Size = '999, 247'
	$datagridview1.TabIndex = 13
	$datagridview1.add_CellContentClick($datagridview1_CellContentClick)
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($groupbox3)
	$groupbox1.Controls.Add($labelWorkspaceONEInfo)
	$groupbox1.Controls.Add($buttonSaveToWS1)
	$groupbox1.Controls.Add($textboxGroupID)
	$groupbox1.Controls.Add($labelGroupID)
	$groupbox1.Controls.Add($Connect)
	$groupbox1.Controls.Add($textboxServer)
	$groupbox1.Controls.Add($labelServer)
	$groupbox1.Controls.Add($textboxAPI)
	$groupbox1.Controls.Add($labelAPIKey)
	$groupbox1.Controls.Add($textboxUsername)
	$groupbox1.Controls.Add($labelUsername)
	$groupbox1.Controls.Add($textboxPassword)
	$groupbox1.Controls.Add($labelPassword)
	$groupbox1.Location = '414, 22'
	$groupbox1.Margin = '4, 3, 4, 3'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Padding = '4, 3, 4, 3'
	$groupbox1.Size = '604, 291'
	$groupbox1.TabIndex = 18
	$groupbox1.TabStop = $False
	$groupbox1.UseCompatibleTextRendering = $True
	#
	# groupbox3
	#
	$groupbox3.Controls.Add($labelAppOptions)
	$groupbox3.Controls.Add($radiobuttonUserDeferredRestart)
	$groupbox3.Controls.Add($checkboxDependency)
	$groupbox3.Controls.Add($radiobuttonForceRestart)
	$groupbox3.Controls.Add($radiobuttonDoNotRestart)
	$groupbox3.Location = '358, 47'
	$groupbox3.Margin = '4, 4, 4, 4'
	$groupbox3.Name = 'groupbox3'
	$groupbox3.Padding = '4, 4, 4, 4'
	$groupbox3.Size = '233, 170'
	$groupbox3.TabIndex = 24
	$groupbox3.TabStop = $False
	$groupbox3.UseCompatibleTextRendering = $True
	#
	# labelAppOptions
	#
	$labelAppOptions.AutoSize = $True
	$labelAppOptions.Location = '80, 5'
	$labelAppOptions.Margin = '4, 0, 4, 0'
	$labelAppOptions.Name = 'labelAppOptions'
	$labelAppOptions.Size = '80, 22'
	$labelAppOptions.TabIndex = 25
	$labelAppOptions.Text = 'App Options'
	$labelAppOptions.UseCompatibleTextRendering = $True
	#
	# radiobuttonUserDeferredRestart
	#
	$radiobuttonUserDeferredRestart.Checked = $True
	$radiobuttonUserDeferredRestart.Location = '8, 130'
	$radiobuttonUserDeferredRestart.Margin = '4, 4, 4, 4'
	$radiobuttonUserDeferredRestart.Name = 'radiobuttonUserDeferredRestart'
	$radiobuttonUserDeferredRestart.Size = '157, 31'
	$radiobuttonUserDeferredRestart.TabIndex = 23
	$radiobuttonUserDeferredRestart.TabStop = $True
	$radiobuttonUserDeferredRestart.Text = 'User Deferred Restart'
	$radiobuttonUserDeferredRestart.UseCompatibleTextRendering = $True
	$radiobuttonUserDeferredRestart.UseVisualStyleBackColor = $True
	#
	# checkboxDependency
	#
	$checkboxDependency.Location = '8, 39'
	$checkboxDependency.Margin = '4, 4, 4, 4'
	$checkboxDependency.Name = 'checkboxDependency'
	$checkboxDependency.Size = '205, 31'
	$checkboxDependency.TabIndex = 20
	$checkboxDependency.Text = 'Create as Dependency App'
	$checkboxDependency.UseCompatibleTextRendering = $True
	$checkboxDependency.UseVisualStyleBackColor = $True
	$checkboxDependency.add_CheckedChanged($checkboxDependency_CheckedChanged)
	#
	# radiobuttonForceRestart
	#
	$radiobuttonForceRestart.Location = '8, 84'
	$radiobuttonForceRestart.Margin = '4, 4, 4, 4'
	$radiobuttonForceRestart.Name = 'radiobuttonForceRestart'
	$radiobuttonForceRestart.Size = '121, 31'
	$radiobuttonForceRestart.TabIndex = 22
	$radiobuttonForceRestart.Text = 'Force Restart'
	$radiobuttonForceRestart.UseCompatibleTextRendering = $True
	$radiobuttonForceRestart.UseVisualStyleBackColor = $True
	#
	# radiobuttonDoNotRestart
	#
	$radiobuttonDoNotRestart.Location = '8, 106'
	$radiobuttonDoNotRestart.Margin = '4, 4, 4, 4'
	$radiobuttonDoNotRestart.Name = 'radiobuttonDoNotRestart'
	$radiobuttonDoNotRestart.Size = '121, 31'
	$radiobuttonDoNotRestart.TabIndex = 21
	$radiobuttonDoNotRestart.Text = 'Do Not Restart'
	$radiobuttonDoNotRestart.UseCompatibleTextRendering = $True
	$radiobuttonDoNotRestart.UseVisualStyleBackColor = $True
	#
	# labelWorkspaceONEInfo
	#
	$labelWorkspaceONEInfo.AutoSize = $True
	$labelWorkspaceONEInfo.Location = '244, 21'
	$labelWorkspaceONEInfo.Margin = '4, 0, 4, 0'
	$labelWorkspaceONEInfo.Name = 'labelWorkspaceONEInfo'
	$labelWorkspaceONEInfo.Size = '127, 22'
	$labelWorkspaceONEInfo.TabIndex = 13
	$labelWorkspaceONEInfo.Text = 'Workspace ONE Info'
	$labelWorkspaceONEInfo.UseCompatibleTextRendering = $True
	#
	# buttonSaveToWS1
	#
	$buttonSaveToWS1.BackColor = 'White'
	$buttonSaveToWS1.ForeColor = 'Black'
	$buttonSaveToWS1.Location = '401, 234'
	$buttonSaveToWS1.Margin = '4, 3, 4, 3'
	$buttonSaveToWS1.Name = 'buttonSaveToWS1'
	$buttonSaveToWS1.Size = '117, 44'
	$buttonSaveToWS1.TabIndex = 19
	$buttonSaveToWS1.Text = 'Save To WS1'
	$buttonSaveToWS1.UseCompatibleTextRendering = $True
	$buttonSaveToWS1.UseVisualStyleBackColor = $False
	$buttonSaveToWS1.add_Click($buttonSaveToWS1_Click)
	#
	# textboxGroupID
	#
	$textboxGroupID.Location = '85, 117'
	$textboxGroupID.Margin = '4, 3, 4, 3'
	$textboxGroupID.Name = 'textboxGroupID'
	$textboxGroupID.Size = '222, 25'
	$textboxGroupID.TabIndex = 3
	#
	# labelGroupID
	#
	$labelGroupID.AutoSize = $True
	$labelGroupID.Location = '18, 120'
	$labelGroupID.Margin = '4, 0, 4, 0'
	$labelGroupID.Name = 'labelGroupID'
	$labelGroupID.Size = '59, 22'
	$labelGroupID.TabIndex = 13
	$labelGroupID.Text = 'Group ID'
	$labelGroupID.UseCompatibleTextRendering = $True
	#
	# Connect
	#
	$Connect.BackColor = 'White'
	$Connect.ForeColor = 'Black'
	$Connect.Location = '122, 234'
	$Connect.Margin = '4, 3, 4, 3'
	$Connect.Name = 'Connect'
	$Connect.Size = '105, 44'
	$Connect.TabIndex = 7
	$Connect.Text = 'Validate Credentials'
	$Connect.UseCompatibleTextRendering = $True
	$Connect.UseVisualStyleBackColor = $False
	$Connect.add_Click($Connect_Click)
	#
	# textboxServer
	#
	$textboxServer.Location = '85, 49'
	$textboxServer.Margin = '4, 3, 4, 3'
	$textboxServer.Name = 'textboxServer'
	$textboxServer.Size = '222, 25'
	$textboxServer.TabIndex = 1
	$textboxServer.Text = 'https://asXXXX.awmdm.com'
	#
	# labelServer
	#
	$labelServer.AutoSize = $True
	$labelServer.Location = '35, 52'
	$labelServer.Margin = '4, 0, 4, 0'
	$labelServer.Name = 'labelServer'
	$labelServer.Size = '42, 22'
	$labelServer.TabIndex = 2
	$labelServer.Text = 'Server'
	$labelServer.UseCompatibleTextRendering = $True
	#
	# textboxAPI
	#
	$textboxAPI.AllowDrop = $True
	$textboxAPI.Location = '85, 83'
	$textboxAPI.Margin = '4, 3, 4, 3'
	$textboxAPI.Name = 'textboxAPI'
	$textboxAPI.Size = '222, 25'
	$textboxAPI.TabIndex = 2
	#
	# labelAPIKey
	#
	$labelAPIKey.AutoSize = $True
	$labelAPIKey.Location = '28, 86'
	$labelAPIKey.Margin = '4, 0, 4, 0'
	$labelAPIKey.Name = 'labelAPIKey'
	$labelAPIKey.Size = '49, 22'
	$labelAPIKey.TabIndex = 4
	$labelAPIKey.Text = 'API Key'
	$labelAPIKey.UseCompatibleTextRendering = $True
	#
	# textboxUsername
	#
	$textboxUsername.Location = '86, 152'
	$textboxUsername.Margin = '4, 3, 4, 3'
	$textboxUsername.Name = 'textboxUsername'
	$textboxUsername.Size = '221, 25'
	$textboxUsername.TabIndex = 4
	#
	# labelUsername
	#
	$labelUsername.AutoSize = $True
	$labelUsername.Location = '13, 156'
	$labelUsername.Margin = '4, 0, 4, 0'
	$labelUsername.Name = 'labelUsername'
	$labelUsername.Size = '64, 22'
	$labelUsername.TabIndex = 6
	$labelUsername.Text = 'Username'
	$labelUsername.UseCompatibleTextRendering = $True
	#
	# textboxPassword
	#
	$textboxPassword.Location = '86, 187'
	$textboxPassword.Margin = '4, 3, 4, 3'
	$textboxPassword.Name = 'textboxPassword'
	$textboxPassword.Size = '221, 25'
	$textboxPassword.TabIndex = 5
	$textboxPassword.UseSystemPasswordChar = $True
	#
	# labelPassword
	#
	$labelPassword.AutoSize = $True
	$labelPassword.Location = '16, 190'
	$labelPassword.Margin = '4, 0, 4, 0'
	$labelPassword.Name = 'labelPassword'
	$labelPassword.Size = '61, 22'
	$labelPassword.TabIndex = 8
	$labelPassword.Text = 'Password'
	$labelPassword.UseCompatibleTextRendering = $True
	#
	# tooltipConnect
	#
	$tooltipConnect.AutomaticDelay = 0
	$tooltipConnect.AutoPopDelay = 0
	$tooltipConnect.InitialDelay = 1
	$tooltipConnect.ReshowDelay = 100
	$tooltipConnect.ToolTipIcon = 'Info'
	$tooltipConnect.ToolTipTitle = 'Validate Credentials'
	#
	# tooltipDependencyApp
	#
	$tooltipDependencyApp.AutoPopDelay = 5000
	$tooltipDependencyApp.InitialDelay = 1
	$tooltipDependencyApp.ReshowDelay = 100
	$tooltipDependencyApp.ToolTipIcon = 'Info'
	$tooltipDependencyApp.ToolTipTitle = 'Dependency App'
	#
	# tooltipForceRestart
	#
	$tooltipForceRestart.AutoPopDelay = 5000
	$tooltipForceRestart.InitialDelay = 1
	$tooltipForceRestart.ReshowDelay = 100
	$tooltipForceRestart.ToolTipIcon = 'Info'
	$tooltipForceRestart.ToolTipTitle = 'Force Restart'
	#
	# tooltipDoNotRestart
	#
	$tooltipDoNotRestart.AutoPopDelay = 5000
	$tooltipDoNotRestart.InitialDelay = 1
	$tooltipDoNotRestart.ReshowDelay = 100
	$tooltipDoNotRestart.ToolTipIcon = 'Info'
	$tooltipDoNotRestart.ToolTipTitle = 'Do Not Restart'
	#
	# tooltipUserDeferredRestart
	#
	$tooltipUserDeferredRestart.AutoPopDelay = 5000
	$tooltipUserDeferredRestart.InitialDelay = 1
	$tooltipUserDeferredRestart.ReshowDelay = 100
	$tooltipUserDeferredRestart.ToolTipIcon = 'Info'
	$tooltipUserDeferredRestart.ToolTipTitle = 'User Deferred Restart'
	$groupbox3.ResumeLayout()
	$groupbox1.ResumeLayout()
	$groupbox2.ResumeLayout()
	$formWindowsUpdaterToolFo.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formWindowsUpdaterToolFo.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formWindowsUpdaterToolFo.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formWindowsUpdaterToolFo.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$formWindowsUpdaterToolFo.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $formWindowsUpdaterToolFo.ShowDialog()

}
#endregion Source: MainForm.psf

#Start the application
Main ($CommandLine)
